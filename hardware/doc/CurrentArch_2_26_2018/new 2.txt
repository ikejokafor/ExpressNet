BRAM_DEPTH

Section0
if(pixel_datain_valid)
    col++
    if(col == numCol)
        row++
        

Section1
    if(config_3x3)  // labels are shared across all AWE's
        awe_ce0_bram_0_0_label = 3
        awe_ce0_bram_0_1_label = 1
        awe_ce0_bram_1_0_label = 2
        awe_ce0_bram_1_1_label = 0
        awe_ce1_bram_0_0_label = 3
        awe_ce1_bram_0_1_label = 1
        awe_ce1_bram_1_0_label = 2
        awe_ce1_bram_1_1_label = 0
        
    if(config_5x5)
        awe_ce0_bram_0_0_label = 3
        awe_ce0_bram_0_1_label = 1
        awe_ce0_bram_1_0_label = 2
        awe_ce0_bram_1_1_label = 0
        awe_ce1_bram_0_0_label = 7
        awe_ce1_bram_0_1_label = 5
        awe_ce1_bram_1_0_label = 6
        awe_ce1_bram_1_1_label = 4
    

Section2
        if(row == 0 || row == 3)
            awe_ce_bram0_wren = true
            awe_ce_bram1_wren = true
            awe_ce_bram0_rowbuffer0_address = bram0_address << AWE_BRAM_CE_OFFSET0
            awe_ce_bram1_rowbuffer1_address = bram1_address << AWE_BRAM_CE_OFFSET0
        else if(row == 1 || row == 4)
            awe_ce_bram1_wren = true
            awe_ce_bram1_rowbuffer2_address = bram1_address << BRAM_AWE_CE_OFFSET1
        else if(row == 2 || row == 5)
            awe_ce_bram0_wren = true
            awe_ce_bram1_rowbuffer3_address = bram0_address << BRAM_AWE_CE_OFFSET1
            
MUX on BRAMS of second convolution in each AWE pair which teslls it to use 3x3 controls when loading values or wait until next set of rows (row3, row4, and row5) come in and then use same logic to dictate
how the row buffers are loaded. They share the same logic, the only difference is when to do the logic based on the row that is coming in

need additional logic for row matrciulation, ie more pointers and another lookup table for



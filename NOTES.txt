ref: ad-ug-0113_v1_2.pdf

    Hang when using a bitstream built with Vivado 2018.3.1
    When running the demonstration program host_hbm with an ADM-PCIE-9H7 that has been configured with a
    host_hbm bitstream built using Vivado 2018.3.1, the program might hang after displaying the message
    INFO: Testing HBM bank 0 range 0x0 - 0x1000000 using CPU ...

    Because this appears to result from a hang condition on an AXI channel somewhere, the DMA transfer cannot be
    aborted and the program does not respond to CTRL-C. After issuing a CTRL-C, the adxdma_reset utility of the
    ADXDMA Driver can be used to abort the program, resetting the XDMA PCI Express endpoint and all
    downstream logic in the process.
    The root cause of this is not known at present, and using Vivado 2019.1 is recommended instead.




There should be one input map address per AWP, one row for entire depth across all AWPâ€™s quads is 
fetched at a time, address is incremented as such.s. counters inside AWP will dictate which 
quad data goes to. Within FAS, if not enough depth, (using counters to know), will send zeros 
to quads, again AWP will dictate which quads data goes to.


 
Interconnect will send data plus, strobe to know which pieces of data are valid
, use counters in AWP to determine signaling and where to send data to.

In the hardware make sure you count how much data you write over AXI, only last right must continue to assert wr valid to write past
data size, up to AXI transfer size. On read must count data coming in so you know which data on the last transfer
is valid


Ddr4 runs at 1300 Mhz  750ps
    Ddr4 user interface will run at 1/4 ie 333.333 repeating MHz 3000 ps ie 3 ns
    Accel will run at 83.333 repearint MHz 12 ns ie 4x slowers
        Fas compute logic will run at 1/4 this ie 3 ns 333.333MHz 4x faster
        Quad logic will run at 1/5 this ie 416.666667 MHz 5x fasters

